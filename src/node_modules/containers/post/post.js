import React, {Component} from 'react'
import {connect} from 'react-redux'
import * as R from 'ramda'

import {fetchPostById} from 'actions'
import {getPostById} from 'selectors'
import CommentBox from 'containers/comment-box'


class Post extends Component {
  componentDidMount() {
    this.props.fetchPostById(this.props.match.params.id)
  }

  renderContent() {
    const {post} = this.props
    const isEmpty = post.image.length
    const srcImg = isEmpty > 0 ? post.image : 'https://ukrinsoft.com/wp-content/uploads/1-5.jpg'
    const datePost = `${R.take(10, post.createdAt)}`
    return (
      <div className="jumbotron jumbotron-fluid"
           key={post.id}>
        <div className="container">
          <h1 className="text-center">Article</h1>
          <img
            src={srcImg}
            className="img-respons"
            alt="img"/>
          <h4 className="display-4">Article content: <span className="pull-right">{datePost}</span></h4>
          <p className="lead">{post.text}</p>
        </div>
      </div>
    )
  }

  renderComments(comment, index) {
    const dateComment = `${R.take(10, comment.created_at)}`
    return (
      <div className="jumbotron jumbotron-fluid"
           key={index}>
        <h4 className="text-center">Comment</h4>
        <div className="comment-wrap">
          <div className="user-icon">
            <img src={comment.image}
                 className="img-respons"
                 alt="user-icon"/>
          </div>
          <div className="body-comment">
            <span className="pull-right">{dateComment}</span>
            <p>{comment.text}</p>
            <a href={comment.file} className="pull-right">download file</a>
          </div>
        </div>
      </div>
    )
  }

  dataComment() {
    let data = [
      {author: 'Pete Hunt', text: 'This is one comment'},
      {author: 'Jordan Walke', text: 'This is *another* comment'}
    ]
    return data
  }

  render() {
    const {post} = this.props
    return (
      <div className="container">
        <div className="post-details">
          {post && this.renderContent()}
        </div>
        <div className="post-comments">
          {post && post.comments.map((comment, index) => this.renderComments(comment, index))}
        </div>
        <div className="comment-list">
          <CommentBox data={this.dataComment()}>
          </CommentBox>
        </div>
      </div>
    )
  }
}

const mapDispatchToProps = {
  fetchPostById
}
const mapStateToProps = state => {
  return {
    post: getPostById(state, state.postPage.id)
  }
}
export default connect(mapStateToProps, mapDispatchToProps)(Post)